{"version":3,"file":"static/js/738.b3f734ea.chunk.js","mappings":"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","sources":["features/store/actions/authorizationActions.ts","entities/Graph/Graph.tsx","features/store/actions/entriesActions.ts","entities/serverUtils/addEntry.ts","entities/serverUtils/deleteEntries.ts","features/MainControls/MainControls.tsx","entities/serverUtils/getEntries.ts","widgets/Header/Header.tsx","pages/MainPage/MainPage.tsx","shared/Button/Button.tsx","shared/Input/Input.tsx","shared/UseWindowDimensions/useWindowDimensions.ts","shared/HStack/HStack.tsx","shared/RadioButtons/RadioButtons.tsx","shared/Island/Island.tsx","entities/Table/Table.tsx","shared/Text/Text.tsx"],"sourcesContent":["import {LOGIN, LOGOUT, REGISTER} from \"../actionTypes/authorizationTypes\";\r\n\r\nexport type userType = {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport const logoutAction = () => {\r\n    return {\r\n        type: LOGOUT,\r\n    }\r\n}\r\nexport const registerAction = (payload: userType) => {\r\n    return {\r\n        type: REGISTER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const loginAction = (payload: userType) => {\r\n    return {\r\n        type: LOGIN,\r\n        payload\r\n    }\r\n}","import React, {createRef, useEffect} from \"react\";\r\nimport \"./Graph.css\";\r\n\r\ntype GraphProps = {\r\n    r: number,\r\n    entries: {x:number, y: number, r: number, result: boolean}[];\r\n\r\n    onClick: (coordinates: {x: number, y: number}) => void;\r\n}\r\n\r\nexport const Graph = (props: GraphProps) => {\r\n\r\n    const canvasRef = createRef<HTMLCanvasElement>();\r\n\r\n    const {r, entries, onClick} = props;\r\n\r\n\r\n    const onClickGraph = (event: React.MouseEvent) => {\r\n        let {x,y} = getCursorPosition(canvasRef.current,event);\r\n\r\n        onClick({\r\n            x: (x-230)/40,\r\n            y: (230-y)/40,\r\n        })\r\n\r\n    }\r\n\r\n    const redrawGraph = () => {\r\n        const ctx = canvasRef.current?.getContext('2d');\r\n\r\n        if(ctx) {\r\n            drawGraph(ctx, r);\r\n            drawDots(ctx, r, entries);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        redrawGraph();\r\n    },[r, entries]);\r\n\r\n\r\n    return <canvas ref={canvasRef} width={460} height={460} className={'canvas'} onClick={onClickGraph} />\r\n}\r\n\r\nconst drawCanvasArrow = (context: CanvasRenderingContext2D , fromx: number, fromy: number, tox: number, toy: number) => {\r\n    let headlen = 10; // length of head in pixels\r\n    let dx = tox - fromx;\r\n    let dy = toy - fromy;\r\n    let angle = Math.atan2(dy, dx);\r\n    context.moveTo(fromx, fromy);\r\n    context.lineTo(tox, toy);\r\n    context.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\r\n    context.moveTo(tox, toy);\r\n    context.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\r\n}\r\n\r\nconst drawGraph = (ctx: CanvasRenderingContext2D, r: number) => {\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0,0, 460, 460);\r\n\r\n\r\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1)\";\r\n    ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\r\n\r\n    ctx.beginPath();\r\n    // Y\r\n    drawCanvasArrow(ctx,230,460,230,0);\r\n\r\n    // X\r\n    drawCanvasArrow(ctx,0,230,460,230);\r\n    ctx.stroke();\r\n\r\n    ctx.font = \"25px Yandex Sans\";\r\n\r\n    ctx.fillText(\"x\", 440, 215);\r\n    ctx.fillText(\"y\", 205, 20);\r\n\r\n\r\n    ctx.fillText(\"5\",245,37);\r\n    ctx.beginPath();\r\n    ctx.moveTo(220,30);\r\n    ctx.lineTo(240, 30);\r\n    ctx.stroke();\r\n\r\n    ctx.fillText(\"5\",425,265);\r\n    ctx.beginPath();\r\n    ctx.moveTo(430,220);\r\n    ctx.lineTo(430, 240);\r\n    ctx.stroke();\r\n\r\n\r\n    ctx.fillText(\"-5\",195,437);\r\n    ctx.beginPath();\r\n    ctx.moveTo(220,430);\r\n    ctx.lineTo(240, 430);\r\n    ctx.stroke();\r\n\r\n\r\n    ctx.fillText(\"-5\",17,210);\r\n    ctx.beginPath();\r\n    ctx.moveTo(30,220);\r\n    ctx.lineTo(30, 240);\r\n    ctx.stroke();\r\n\r\n\r\n    ctx.fillText(\"2.5\",245,137);\r\n    ctx.beginPath();\r\n    ctx.moveTo(220,130);\r\n    ctx.lineTo(240, 130);\r\n    ctx.stroke();\r\n\r\n    ctx.fillText(\"2.5\",315,265);\r\n    ctx.beginPath();\r\n    ctx.moveTo(330,220);\r\n    ctx.lineTo(330, 240);\r\n    ctx.stroke();\r\n\r\n\r\n    ctx.fillText(\"-2.5\",175,337);\r\n    ctx.beginPath();\r\n    ctx.moveTo(220,330);\r\n    ctx.lineTo(240, 330);\r\n    ctx.stroke();\r\n\r\n\r\n    ctx.fillText(\"-2.5\",107,210);\r\n    ctx.beginPath();\r\n    ctx.moveTo(130,220);\r\n    ctx.lineTo(130, 240);\r\n    ctx.stroke();\r\n\r\n\r\n\r\n    // GRAPH\r\n    // center 230,230\r\n    // 0-5: 200, 1=40;\r\n    // r=5 - 1,\r\n\r\n    ctx.fillStyle = \"rgba(50, 63, 179, 0.5)\";\r\n\r\n    // RECTANGLE\r\n    ctx.fillRect(230,230,-40*r/2,-40*r);    // x*r = 100\r\n\r\n    // CIRCLE\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"rgba(50, 63, 179, 0.5)\";\r\n    ctx.moveTo(230,230);\r\n    ctx.arc(230,230,40*r/2,Math.PI*3/2,Math.PI*2,false);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // TRIANGLE\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"rgba(50, 63, 179, 0.5)\";\r\n    ctx.moveTo(230-40*r/2,230);\r\n    ctx.lineTo(230,230);\r\n    ctx.lineTo(230,230+40*r/2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = \"rgba(0, 0, 0, 1)\";\r\n    ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\r\n}\r\n\r\nconst drawDots = (ctx: CanvasRenderingContext2D, r: number, dots: {x:number, y: number, r: number, result: boolean}[]) => {\r\n\r\n    dots.forEach(dot => {\r\n        ctx.fillStyle = dot.result ? 'green' : 'red';\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            230 + dot.x*40,\r\n            -dot.y*40 + 230,\r\n            6, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n    })\r\n\r\n}\r\n\r\nfunction getCursorPosition(canvas: HTMLCanvasElement | null, event: React.MouseEvent) {\r\n    if (canvas){\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = Math.round(event.clientX - rect.left);\r\n        const y = Math.round(event.clientY - rect.top);\r\n        return {x,y};\r\n    }\r\n\r\n    return {x: 0, y: 0};\r\n}\r\n","import {ADD_ENTRY, CLEAR_ENTRIES,  LOAD_ENTRIES} from \"../actionTypes/entriesTypes\";\r\n\r\nexport type entryServerType = {\r\n    date: string,\r\n    executionTime: number,\r\n    id: number,\r\n    result:boolean,\r\n    x: number,\r\n    y: number,\r\n    r: number,\r\n}\r\n\r\n\r\nexport const addEntryAction = (payload: entryServerType) => {\r\n    return {\r\n        type: ADD_ENTRY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setEntriesAction = (payload: entryServerType[]) => {\r\n\r\n    return {\r\n        type: LOAD_ENTRIES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const clearEntriesAction = () => {\r\n    return {\r\n        type: CLEAR_ENTRIES,\r\n    }\r\n}","import axios from 'axios';\r\nimport {EntryRequestType} from \"./types\";\r\n\r\n\r\nexport const addEntry = async (entry: EntryRequestType) => {\r\n    return axios('/api',{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: entry\r\n    });\r\n}","import axios from 'axios';\r\nimport {UserType} from \"./types\";\r\n\r\n\r\nexport const deleteEntries = async (user: UserType) => {\r\n    return axios('/api',{\r\n        method: \"DELETE\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: user,\r\n    });\r\n}","import React, {useState} from 'react';\r\nimport \"./MainControls.css\";\r\nimport {Button, Input, Island, RadioButtons, useWindowDimensions, Text, HStack} from \"shared\";\r\nimport {Graph} from \"../../entities\";\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n    addEntryAction,\r\n    clearEntriesAction,\r\n    entryServerType,\r\n} from \"features/store/actions/entriesActions\";\r\nimport {AppDispatch} from \"features/store/store\";\r\nimport {addEntry, deleteEntries} from \"entities/serverUtils\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {logoutAction} from \"../store/actions/authorizationActions\";\r\n\r\n\r\n// @ts-ignore\r\nconst MainControlsComponent = (props) => {\r\n    const {authInfo, entries, addStateEntry, stateLogout, clearStateEntries} = props;\r\n\r\n    const {width} = useWindowDimensions();\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n    const [r, setR] = useState(3);\r\n    const [x, setX] = useState(0);\r\n    const [y, setY] = useState(0);\r\n\r\n    const handleEntrySubmit = (coordinates: {x: number, y: number}) => {\r\n        addEntry({x: coordinates.x, y: coordinates.y, r, username: authInfo.username, password: authInfo.password}).then(response =>\r\n            {\r\n                if (response.data.error) {\r\n                    stateLogout();\r\n                    navigate('/');\r\n                }\r\n\r\n                addStateEntry(response.data.entry);\r\n            }\r\n        ).catch(() => {\r\n            stateLogout();\r\n            navigate('/');\r\n        })\r\n    }\r\n\r\n    const handleSubmitClick = () => {\r\n        handleEntrySubmit({x: x, y: y});\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setR(3);\r\n        setX(0);\r\n        setY(0);\r\n\r\n        deleteEntries({username: authInfo.username, password: authInfo.password}).then(response =>\r\n            {\r\n                console.log(response);\r\n\r\n                if (response.data.error) {\r\n                    stateLogout();\r\n                    navigate('/');\r\n                }\r\n\r\n                clearStateEntries();\r\n            }\r\n        ).catch(() => {\r\n            stateLogout();\r\n            navigate('/');\r\n        })\r\n    }\r\n\r\n    const handleRChange = (value: string) => {\r\n        setR(Number(value) <1 ? 1 : Number(value));\r\n    }\r\n\r\n    const handleXChange = (value: string) => {\r\n        setX(Number(value));\r\n    }\r\n\r\n    const handleYChange = (value: string | number) => {\r\n        setY(Number(value));\r\n    }\r\n\r\n\r\n    const MobilePage = () => {\r\n        return (\r\n            <div className={'controls'}>\r\n                <Graph r={r} entries={entries} onClick={handleEntrySubmit} />\r\n                <Island>\r\n                    <Text text={'Радиус'} />\r\n                    <RadioButtons id={'radius'} defaultChecked={String(r)} onChange={handleRChange} items={[\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]} />\r\n                    <Text text={'Координата X'}/>\r\n                    <RadioButtons id={'x_coordinate'} defaultChecked={String(x)} onChange={handleXChange} items={[\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]} />\r\n                    <Text text={'Координата Y'}/>\r\n                    <Input onChange={handleYChange} type={\"number\"} bounds={{min: -3, max: 5}} value={y} />\r\n                    <Button onClick={handleSubmitClick} text={\"Отправить\"} />\r\n                    <Button onClick={handleClear} text={\"Очистить\"} />\r\n                </Island>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const TabletPage = () => {\r\n        return (\r\n            <div className={'controls'}>\r\n                <Graph r={r} entries={entries} onClick={handleEntrySubmit} />\r\n                <Island>\r\n                    <Text text={'Радиус'} />\r\n                    <RadioButtons id={'radius'} defaultChecked={String(r)} onChange={handleRChange} items={[\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]} />\r\n                    <Text text={'Координата X'}/>\r\n                    <RadioButtons id={'x_coordinate'} defaultChecked={String(x)} onChange={handleXChange} items={[\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]} />\r\n                    <Text text={'Координата Y'}/>\r\n                    <Input onChange={handleYChange} type={\"number\"} bounds={{min: -3, max: 5}} value={y} />\r\n                    <HStack>\r\n                        <Button onClick={handleSubmitClick} text={\"Отправить\"} />\r\n                        <Button onClick={handleClear} text={\"Очистить\"} />\r\n                    </HStack>\r\n                </Island>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const PCPage = () => {\r\n        return (\r\n            <div className={'controls'}>\r\n                <HStack>\r\n\r\n                    <Island>\r\n                        <Text text={'Радиус'} />\r\n                        <RadioButtons id={'radius'} defaultChecked={String(r)} onChange={handleRChange} items={[\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]} />\r\n                        <Text text={'Координата X'}/>\r\n                        <RadioButtons id={'x_coordinate'} defaultChecked={String(x)} onChange={handleXChange} items={[\"-3\",\"-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]} />\r\n                        <Text text={'Координата Y'}/>\r\n                        <Input onChange={handleYChange} type={\"number\"} bounds={{min: -3, max: 5}} value={y} />\r\n                        <HStack>\r\n                            <Button onClick={handleSubmitClick} text={\"Отправить\"} />\r\n                            <Button onClick={handleClear} text={\"Очистить\"} />\r\n                        </HStack>\r\n                    </Island>\r\n                    <Graph r={r} entries={entries} onClick={handleEntrySubmit} />\r\n                </HStack>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {width >= 1074 ? <PCPage /> : width < 713 ? <MobilePage /> : <TabletPage />}\r\n        </div>\r\n    );\r\n}\r\n\r\n// @ts-ignore\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        entries: state.entries.entries,\r\n        authInfo: state.authorization,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\r\n    return {\r\n        addStateEntry: (entry: entryServerType) => dispatch(addEntryAction(entry)),\r\n        clearStateEntries: () => dispatch(clearEntriesAction()),\r\n        stateLogout: () => dispatch(logoutAction()),\r\n    }\r\n}\r\n\r\nexport const MainControls =  connect(mapStateToProps, mapDispatchToProps)(MainControlsComponent);\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport {UserType} from \"./types\";\r\n\r\n\r\nexport const getEntries = async (user: UserType) => {\r\n    return axios('/api/entries',{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: {\r\n            username: user.username,\r\n            password: user.password\r\n        },\r\n    });\r\n}","import React, {useState} from 'react';\r\nimport { format } from 'date-fns';\r\nimport \"./Header.css\";\r\n\r\ntype HeaderProps = {\r\n    username?: string\r\n}\r\n\r\nexport const Header = (props: HeaderProps) => {\r\n    const {username} = props;\r\n\r\n    const [time, setTime] = useState(new Date());\r\n\r\n    React.useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            setTime(new Date());\r\n        },1000)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className={'header'}>\r\n            <div>{username ? username : \"Guest \"}</div>\r\n            <div>lab 4/V3210166</div>\r\n            <div>{format(time, 'dd/MM/yyyy kk:mm:ss')}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React from 'react';\nimport {Button, Table} from 'shared'\nimport {MainControls} from \"features\";\nimport \"./MainPage.css\";\nimport {AppDispatch} from \"features/store/store\";\nimport {\n    clearEntriesAction,\n    entryServerType,\n    setEntriesAction\n} from \"features/store/actions/entriesActions\";\nimport {connect} from \"react-redux\";\nimport {logoutAction} from \"features/store/actions/authorizationActions\";\nimport {getEntries} from \"../../entities/serverUtils\";\nimport {useNavigate} from \"react-router-dom\";\nimport {Header} from \"widgets\";\n\n\n// @ts-ignore\nconst MainPageComponent = (props) => {\n\n    const navigate = useNavigate();\n\n    const {authInfo, entries, stateLogout, setStateEntries, clearStateEntries } = props;\n\n\n    React.useEffect(() => {\n\n        if (!authInfo.authFlag) {\n            navigate('/');\n        }\n\n        getEntries({ username: authInfo.username, password: authInfo.password})\n            .then(response => {\n                if (response.data.error) {\n                    console.log(response.data.message);\n                }\n                else {\n                    setStateEntries(response.data.entries);\n                }\n            }).catch(() => {\n            })\n\n    }, [authInfo, navigate, setStateEntries]);\n\n\n    const handleLogout = () => {\n        stateLogout();\n        clearStateEntries();\n        navigate('/');\n    }\n\n    return (\n        <div>\n\n            <div className={'MainPage'}>\n                <div>\n                    <Header username={authInfo.username} />\n                    <Button onClick={handleLogout} text={\"Log Out\"}/>\n                    <MainControls />\n                    <Table dots={entries} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n// @ts-ignore\nconst mapStateToProps = (state) => {\n    return {\n        entries: state.entries.entries,\n        authInfo: state.authorization,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\n    return {\n        setStateEntries: (entries: entryServerType[]) => dispatch(setEntriesAction(entries)),\n        stateLogout: () => dispatch(logoutAction()),\n        clearStateEntries: () => dispatch(clearEntriesAction()),\n    }\n}\n\nconst MainPage = connect(mapStateToProps, mapDispatchToProps)(MainPageComponent);\n\n\nexport default MainPage;\n","import React from 'react';\nimport \"./Button.css\";\n\ntype ButtonProps = {\n    onClick: () => void;\n    text: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n    const {onClick, text} = props;\n\n    return <button className=\"button\" onClick={onClick}>{text}</button>\n}\n","import React from \"react\";\r\nimport './Input.css';\r\n\r\ntype InputProps = {\r\n    onChange: (text:  string | number ) => void;\r\n    type: \"text\" | \"number\";\r\n\r\n    bounds?: {min: number, max: number};\r\n\r\n    value: string | number,\r\n}\r\n\r\nexport const Input = (props: InputProps) => {\r\n    const {type, onChange, bounds, value} = props;\r\n\r\n    const onValueChange = (event:  React.ChangeEvent<HTMLInputElement> | undefined) => {\r\n         if (type===\"number\" && bounds) {\r\n             if (event?.target.value && (Number(event?.target.value) < bounds.min || Number(event?.target.value) > bounds.max)) return;\r\n         }\r\n         // changeValue(event?.target.value ?? \"\");\r\n         onChange(event?.target.value ?? \"\");\r\n    }\r\n\r\n    return (\r\n        <input\r\n            type={type}\r\n            value={value}\r\n            onChange={onValueChange}\r\n            className={'input'}\r\n        />\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React from 'react';\r\nimport './HStack.css'\r\nimport {useWindowDimensions} from \"../UseWindowDimensions/useWindowDimensions\";\r\n\r\ntype HStackProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nexport const HStack = (props: HStackProps) => {\r\n    const {width} = useWindowDimensions();\r\n\r\n    return <div className={width<713? 'HStackMobile':'HStack'}>\r\n        {props.children}\r\n    </div>\r\n}","import React, {useState} from 'react';\r\nimport {HStack} from \"../HStack/HStack\";\r\nimport \"./RadioButtons.css\";\r\n\r\ntype RadioButtonsProps = {\r\n    onChange: (value: string) => void;\r\n    items: string[];\r\n\r\n    id: string;\r\n\r\n    defaultChecked?: string;\r\n}\r\n\r\n\r\nexport const RadioButtons = (props: RadioButtonsProps) => {\r\n    const {items, onChange, id, defaultChecked} = props;\r\n\r\n    const [checkedValue, setCheckedValue] = useState(defaultChecked);\r\n\r\n    const onClick = (event:  React.MouseEvent<HTMLButtonElement> | undefined) => {\r\n        onChange(event?.currentTarget.value ?? \"\");\r\n        setCheckedValue(event?.currentTarget.value ?? \"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <HStack>\r\n            {items.map(el => {\r\n\r\n            return (\r\n                    <button onClick={onClick} className={el===checkedValue? \"checked_button\" :\"default_button\"} value={el} key={id+\"_\"+el}>\r\n                        {el}\r\n                    </button>\r\n            )\r\n            })}\r\n        </HStack>\r\n    );\r\n}\r\n\r\n// <div className={'form_radio_btn'} key={el}>\r\n//     <input id={id + \"_radio-\"+ el} type={'radio'} name={'radio'} value={el} onChange={onClick} defaultChecked={el===checkedValue}/>\r\n//     <label htmlFor={id + \"_radio-\"+ el}>{el}</label>\r\n// </div>","import React from \"react\";\r\nimport \"./Island.css\";\r\n\r\ntype IslandProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport const Island = (props: IslandProps) => {\r\n\r\n    return(\r\n        <div className={'island'}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\ntype TableProps = {\r\n    dots: {\r\n        date: string,\r\n        executionTime: string,\r\n        x: string,\r\n        y: string,\r\n        r: string,\r\n        result: boolean,\r\n        id: number\r\n    }[];\r\n}\r\n\r\nexport const Table = (props: TableProps) => {\r\n\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\" className={'left'}>Время</th>\r\n                    <th scope=\"col\">Затрачено</th>\r\n                    <th scope=\"col\">X</th>\r\n                    <th scope=\"col\">Y</th>\r\n                    <th scope=\"col\">R</th>\r\n                    <th scope=\"col\" className={'right'}>Результат</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.dots.map(el=>{\r\n                        return (\r\n                            <tr key={el.id}>\r\n                                <th scope={'row'}>{el.date}</th>\r\n                                <td>{el.executionTime}</td>\r\n                                <td>{el.x}</td>\r\n                                <td>{el.y}</td>\r\n                                <td>{el.r}</td>\r\n                                <td>{el.result ? \"Попадание\" : \"Промах\"}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./Text.css\";\r\n\r\ntype TextProps = {\r\n    text: string,\r\n    isError?: boolean\r\n}\r\n\r\nexport const Text = (props: TextProps) => {\r\n\r\n    return (\r\n        <div className={props.isError ? 'errorText' : 'text'}>\r\n            {props.text}\r\n        </div>\r\n    );\r\n}"],"names":["logoutAction","type","LOGOUT","registerAction","payload","REGISTER","loginAction","LOGIN","Graph","props","canvasRef","createRef","r","entries","onClick","useEffect","ctx","current","getContext","drawGraph","drawDots","redrawGraph","ref","width","height","className","event","canvas","rect","getBoundingClientRect","x","Math","round","clientX","left","y","clientY","top","getCursorPosition","drawCanvasArrow","context","fromx","fromy","tox","toy","dx","dy","angle","atan2","moveTo","lineTo","cos","PI","sin","fillStyle","fillRect","strokeStyle","beginPath","stroke","font","fillText","arc","closePath","fill","dots","forEach","dot","result","clearEntriesAction","CLEAR_ENTRIES","addEntry","entry","axios","method","headers","data","deleteEntries","user","MainControls","connect","state","authInfo","authorization","dispatch","addStateEntry","ADD_ENTRY","clearStateEntries","stateLogout","useWindowDimensions","navigate","useNavigate","useState","setR","setX","setY","handleEntrySubmit","coordinates","username","password","then","response","error","catch","handleSubmitClick","handleClear","console","log","handleRChange","value","Number","handleXChange","handleYChange","MobilePage","text","id","defaultChecked","String","onChange","items","bounds","min","max","TabletPage","PCPage","getEntries","Header","Date","time","setTime","React","setInterval","format","setStateEntries","LOAD_ENTRIES","authFlag","message","Button","Input","target","getWindowDimensions","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","HStack","children","RadioButtons","checkedValue","setCheckedValue","currentTarget","map","el","Island","Table","scope","date","executionTime","Text","isError"],"sourceRoot":""}