{"version":3,"file":"static/js/511.e857553a.chunk.js","mappings":"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","sources":["features/store/actions/authorizationActions.ts","entities/serverUtils/register.ts","entities/serverUtils/login.ts","pages/StartPage/StartPage.tsx","shared/Button/Button.tsx","shared/Input/Input.tsx","shared/UseWindowDimensions/useWindowDimensions.ts","shared/HStack/HStack.tsx","shared/RadioButtons/RadioButtons.tsx","shared/Island/Island.tsx","entities/Table/Table.tsx","shared/Text/Text.tsx"],"sourcesContent":["import {LOGIN, LOGOUT, REGISTER} from \"../actionTypes/authorizationTypes\";\r\n\r\nexport type userType = {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport const logoutAction = () => {\r\n    return {\r\n        type: LOGOUT,\r\n    }\r\n}\r\nexport const registerAction = (payload: userType) => {\r\n    return {\r\n        type: REGISTER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const loginAction = (payload: userType) => {\r\n    return {\r\n        type: LOGIN,\r\n        payload\r\n    }\r\n}","import axios from 'axios';\r\nimport {UserType} from \"./types\";\r\n\r\n\r\nexport const register = async (user: UserType) => {\r\n    return axios('/api/register',{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: user\r\n    });\r\n}","import axios from 'axios';\r\nimport {UserType} from \"./types\";\r\n\r\n\r\nexport const login = async (user: UserType) => {\r\n    return axios('/api/login',{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data: {\r\n            username: user.username,\r\n            password: user.password\r\n        }\r\n    });\r\n}","import React, {useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./StartPage.css\";\r\nimport {Button, Input, Island, Text} from \"shared\";\r\nimport {AppDispatch} from \"../../features/store/store\";\r\nimport {loginAction, registerAction, userType} from \"../../features/store/actions/authorizationActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, register} from \"../../entities/serverUtils\";\r\n\r\n// @ts-ignore\r\nconst StartPageComponent = (props) => {\r\n\r\n    const {stateLogin, authInfo, stateRegister} = props;\r\n    const navigate = useNavigate();\r\n\r\n    React.useEffect(() => {\r\n        if (authInfo.authFlag) {\r\n            navigate('/home');\r\n        }\r\n    }, [navigate, authInfo])\r\n\r\n    const [loginInput, setLoginInput] = useState(\"\");\r\n    const [passwordInput, setPasswordInput] = useState(\"\");\r\n\r\n    const [isErrorVisible, setErrorVisible] = useState(false);\r\n    const [errorText, setErrorText] = useState('');\r\n\r\n    const handleRegister = () => {\r\n        register({username: loginInput, password: passwordInput} ).then(response => {\r\n\r\n            console.log(response);\r\n\r\n            if (response.data.error) {\r\n                setErrorVisible(true);\r\n                setErrorText(response.data.message);\r\n            } else {\r\n               stateRegister({username: loginInput, password: passwordInput});\r\n               navigate('/home');\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleLogIn = () => {\r\n        login({username: loginInput, password: passwordInput} ).then(response => {\r\n\r\n            console.log(response);\r\n\r\n            if (response.data.error) {\r\n                setErrorVisible(true);\r\n                setErrorText(response.data.message);\r\n            } else {\r\n                stateLogin({username: loginInput, password: passwordInput});\r\n                navigate('/home');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const handleLoginInput = (text: string | number) => {\r\n        if (typeof text != \"string\") return;\r\n\r\n        setLoginInput(text);\r\n    }\r\n\r\n    const handlePasswordInput = (text: string | number) => {\r\n        if (typeof text != \"string\") return;\r\n\r\n        setPasswordInput(text);\r\n    }\r\n\r\n\r\n    return <div className={'StartPage'}>\r\n        <div>\r\n            <Island>\r\n                <Text text={\"Welcome to the dungeon!\"} />\r\n\r\n                <Text text={\"Login: \"} />\r\n                <Input onChange={handleLoginInput} type={\"text\"} value={loginInput} />\r\n\r\n                <Text text={\"Password: \"} />\r\n                <Input onChange={handlePasswordInput} type={\"text\"} value={passwordInput} />\r\n\r\n                {isErrorVisible && (<Text text={errorText} isError/>) }\r\n\r\n                <Button onClick={handleRegister} text={\"Register\"} />\r\n                <Button onClick={handleLogIn} text={\"Log in\"} />\r\n            </Island>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n// @ts-ignore\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authInfo: state.authorization,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\r\n    return {\r\n        stateLogin: (user: userType) => dispatch(loginAction(user)),\r\n        stateRegister: (user: userType) => dispatch(registerAction(user)),\r\n    }\r\n}\r\n\r\nconst StartPage = connect(mapStateToProps, mapDispatchToProps)(StartPageComponent);\r\n\r\nexport default StartPage;","import React from 'react';\nimport \"./Button.css\";\n\ntype ButtonProps = {\n    onClick: () => void;\n    text: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n    const {onClick, text} = props;\n\n    return <button className=\"button\" onClick={onClick}>{text}</button>\n}\n","import React from \"react\";\r\nimport './Input.css';\r\n\r\ntype InputProps = {\r\n    onChange: (text:  string | number ) => void;\r\n    type: \"text\" | \"number\";\r\n\r\n    bounds?: {min: number, max: number};\r\n\r\n    value: string | number,\r\n}\r\n\r\nexport const Input = (props: InputProps) => {\r\n    const {type, onChange, bounds, value} = props;\r\n\r\n    const onValueChange = (event:  React.ChangeEvent<HTMLInputElement> | undefined) => {\r\n         if (type===\"number\" && bounds) {\r\n             if (event?.target.value && (Number(event?.target.value) < bounds.min || Number(event?.target.value) > bounds.max)) return;\r\n         }\r\n         // changeValue(event?.target.value ?? \"\");\r\n         onChange(event?.target.value ?? \"\");\r\n    }\r\n\r\n    return (\r\n        <input\r\n            type={type}\r\n            value={value}\r\n            onChange={onValueChange}\r\n            className={'input'}\r\n        />\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React from 'react';\r\nimport './HStack.css'\r\nimport {useWindowDimensions} from \"../UseWindowDimensions/useWindowDimensions\";\r\n\r\ntype HStackProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nexport const HStack = (props: HStackProps) => {\r\n    const {width} = useWindowDimensions();\r\n\r\n    return <div className={width<713? 'HStackMobile':'HStack'}>\r\n        {props.children}\r\n    </div>\r\n}","import React, {useState} from 'react';\r\nimport {HStack} from \"../HStack/HStack\";\r\nimport \"./RadioButtons.css\";\r\n\r\ntype RadioButtonsProps = {\r\n    onChange: (value: string) => void;\r\n    items: string[];\r\n\r\n    id: string;\r\n\r\n    defaultChecked?: string;\r\n}\r\n\r\n\r\nexport const RadioButtons = (props: RadioButtonsProps) => {\r\n    const {items, onChange, id, defaultChecked} = props;\r\n\r\n    const [checkedValue, setCheckedValue] = useState(defaultChecked);\r\n\r\n    const onClick = (event:  React.MouseEvent<HTMLButtonElement> | undefined) => {\r\n        onChange(event?.currentTarget.value ?? \"\");\r\n        setCheckedValue(event?.currentTarget.value ?? \"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <HStack>\r\n            {items.map(el => {\r\n\r\n            return (\r\n                    <button onClick={onClick} className={el===checkedValue? \"checked_button\" :\"default_button\"} value={el} key={id+\"_\"+el}>\r\n                        {el}\r\n                    </button>\r\n            )\r\n            })}\r\n        </HStack>\r\n    );\r\n}\r\n\r\n// <div className={'form_radio_btn'} key={el}>\r\n//     <input id={id + \"_radio-\"+ el} type={'radio'} name={'radio'} value={el} onChange={onClick} defaultChecked={el===checkedValue}/>\r\n//     <label htmlFor={id + \"_radio-\"+ el}>{el}</label>\r\n// </div>","import React from \"react\";\r\nimport \"./Island.css\";\r\n\r\ntype IslandProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport const Island = (props: IslandProps) => {\r\n\r\n    return(\r\n        <div className={'island'}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\ntype TableProps = {\r\n    dots: {\r\n        date: string,\r\n        executionTime: string,\r\n        x: string,\r\n        y: string,\r\n        r: string,\r\n        result: boolean,\r\n        id: number\r\n    }[];\r\n}\r\n\r\nexport const Table = (props: TableProps) => {\r\n\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\" className={'left'}>Время</th>\r\n                    <th scope=\"col\">Затрачено</th>\r\n                    <th scope=\"col\">X</th>\r\n                    <th scope=\"col\">Y</th>\r\n                    <th scope=\"col\">R</th>\r\n                    <th scope=\"col\" className={'right'}>Результат</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.dots.map(el=>{\r\n                        return (\r\n                            <tr key={el.id}>\r\n                                <th scope={'row'}>{el.date}</th>\r\n                                <td>{el.executionTime}</td>\r\n                                <td>{el.x}</td>\r\n                                <td>{el.y}</td>\r\n                                <td>{el.r}</td>\r\n                                <td>{el.result ? \"Попадание\" : \"Промах\"}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./Text.css\";\r\n\r\ntype TextProps = {\r\n    text: string,\r\n    isError?: boolean\r\n}\r\n\r\nexport const Text = (props: TextProps) => {\r\n\r\n    return (\r\n        <div className={props.isError ? 'errorText' : 'text'}>\r\n            {props.text}\r\n        </div>\r\n    );\r\n}"],"names":["logoutAction","type","LOGOUT","registerAction","payload","REGISTER","loginAction","LOGIN","register","user","axios","method","headers","data","login","username","password","connect","state","authInfo","authorization","dispatch","stateLogin","stateRegister","props","navigate","useNavigate","React","authFlag","useState","loginInput","setLoginInput","passwordInput","setPasswordInput","isErrorVisible","setErrorVisible","errorText","setErrorText","className","text","onChange","value","isError","onClick","then","response","console","log","error","message","Button","Input","bounds","event","target","Number","min","max","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","HStack","children","RadioButtons","items","id","defaultChecked","checkedValue","setCheckedValue","currentTarget","map","el","Island","Table","scope","dots","date","executionTime","x","y","r","result","Text"],"sourceRoot":""}